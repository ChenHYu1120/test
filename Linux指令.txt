ls 显示目录文件  -a 显示所有目录文件（含隐藏） -l显示详细信息  -lh 显示长信息（大小） -i 显示i结点  -d显示当前路径
mkdir 创建目录 -p 递归创建  
cd 切换目录
pwd 查看当前目录
rmdir 删除空目录
cp 复制文件 -r 复制目录  -p 复制保持文件属性
mv 剪切或改名文件
rm 删除文件  -r 删除目录  -f 删除不需要确认    exp：rm -rf  *  （删除所有文件）
touch 创建文件
cat 查看文件内容 -n 显示行号 -A 显示所有隐藏字符
tac 反向查看文件内容 
more 分页浏览  space/f 翻页 enter 下一行 q 退出
less 分页浏览（回翻页） ↑/↓ 上/下一行  Pg Up/Dn 上/下页   / 查找关键词  
head查看文件内容前10行  -n  数字  指定查看前多少行 
tail 查看文件内容末前10行  -n  数字  指定查看末多少行 -f 动态显示文件
ln 硬连接 -s 软连接 硬链接特征：1.拷贝cp -p +同步更新 2.通过i节点识别 3.不能跨分区 4.不能针对目录使用
                             软连接特征：1.lrwxrwxrwx   2.文件大小-只是符号链接 3. 箭头指向源文件
chmod 修改权限 + 增加权限 - 减少权限 =直接授予权限 
                          r=4  w=2 x=1
                          exp: 1. chmod  u/g/r +/-/= r/w/x  /directory/file  2.chmod  777  /directory/file
chown  更改文件所有者 exp ：
chgrp  更改文件所属组
umask 查看/更改缺省创建文件的权限
find -name 文件名查找 -iname 文件名查找（不区分大小写）* 匹配任意字符   ？匹配单个字符  exp：find /etc -iname *init*/ init??? 
        -size 文件大小查找  +大于多少  -小于多少  exp: find /etc -size +/- 文件大小
       -user 所有者查找  -group 所属组查找   exp：find /tmp -user/-group  root
       -amin 访问时间更改查找 -cmin 文件属性更改查找 -mmin 文件内容更改查找 find /home -amin -5(在5分钟之内被修改过)/+5（超过5分钟被修改过）
       -type 文件类型查找 f 文件  d 目录 l 软连接 
       -inum i结点查找   exp： find -inum 31531 
       -a 两个条件都满足  -o 两个条件满足其一  exp: find /etc -name init* -a/-o -type f （查找init开头的文件）/（查找文件或查找init开头的文件或目录） 
       -exec/-ok ｛｝\; 命令连接符（-ok会询问确认）  exp：find /etc -name inittab -exec ls -l ｛｝\;（在/etc下查找inittab文件并显示其详细信息） 
                                                                                       find /home -user shenchao -ok rm ｛｝\;(在/home下查找所有者是shenchao的文件并询问是否删除）
locate 快速查找文件路径  updatedb 更新资料库（不包括tmp）
which 查找命令所在路径和别名信息
whereis 查找命令所在路径和帮助文档路径和配置文件路径
grep [选项] 搜索内容 ：查找文件关键字符 
        -i  不区分大小写  
        -v 排除查找 
        -n 输出行号
        --color=auto 搜索出的关键字用颜色显示
man/info  查看命令或配置文件的帮助  
whatis  获取简单命令信息
apropos   获取配置文件信息
命令 --help   获得命令option
help  查看shell内置命令的帮助信息（shell内置命令：命令找不到路径）
useradd  [用户名]  添加用户
              -u UID : 指定用户的UID号
              -d 家目录 ：指定用户的家目录
              -c 用户说明：指定用户的说明信息
              -g 组名：指定用户的初始组
              -G 组名：指定用户的附加组
              -s shell :  指定用户的登录shell。默认是/bin/bash          
passwd  [用户名]  设置/更改用户密码
             -S [用户名] ：查看密码状态
             -l  [用户名] ：锁定用户
             -u [用户名] ：解锁用户
             --stdin [用户名] ：使用字符串作为用户的密码   exp : echo "123”|  passwd --stdin chenhangyu
usermod   -u UID：修改用户的UID号
                -c 用户说明：修改用户的说明信息
                -G 组名：修改用户的附加组
                -L  [用户名] ：锁定用户
                -U [用户名] ：解锁用户
chage  [用户名]：修改密码用户状态
            -l  ：列出用户的详细密码状态
            -d ：修改密码最后一次更改日期（shadow 第3字段）
userdel [用户名] ：删除用户  -r 删除用户的同时删除用户家目录
id [用户名] ：查看用户UID和GID信息
su - [用户名] ：切换用户+环境
groupadd [组名] ：添加用户组
groupmod -n [新组名] [原始组名]：修改组名 
groupdel [组名] ：删除用户组
gpasswd  -a [用户名] ：把用户加入组
               -d [用户名] ：把用户从组中删除
who 查看当前用户登录信息
w 查看当前用户详细登录信息
gzip [选项] [文件] ：压缩文件生成.gz  
        -d [压缩文件] ：解压缩    
gunzip [压缩文件]：解压缩 （只能压缩文件，不能压缩目录，不能保留原文件）
tar [选项] [压缩后文件名] [目录]：打包目录，生成.tar.gz 
      -c ：打包
      -v ：显示详细信息
      -f ：指定文件名
      -z ：打包同时压缩  
      -j ：压缩生成.tar.bz2的文件  
tar [选项] [压缩文件] ：解压
      -x ：解包
      -f ：指定文件名
      -z ：解压缩 
      -j ：解压缩.tar.bz2的文件
zip [选项] [压缩后文件名] [文件/目录] ：压缩文件生成.zip  
      -r ：压缩目录   
unzip [压缩文件] ：解压缩（保留原文件，解压比不高）
bzip2 [选项] [文件] ：压缩文件生成.bz2
         -k ：保留原文件    
bunzip2  [压缩文件]：解压缩     
write <用户名> 给指定用户发送信息
wall [信息]  给所有在线用户发送信息
ping ip地址  测试网络连通性  -c 指定发送次数
ifconfig 查看和设置网卡信息
mail [用户名]  查看发送电子邮件  h 查看列表  d 删除邮件 q 退出  
last 查看目前与过去登入系统的用户信息
lastlog -u [用户名] 指定用户最后登录时间
traceroute 显示数据包到主机间的路径
netstat 查询网络状态  -tlun 查看本机监听的端口  -an 查看本机所有的网络连接     -rn 查看本机路由表
mount [设备文件名] [挂载点]   光盘挂载  exp: mount /dev/sr0 /mnt/cdrom
             -a ：自动挂载
umount [设备文件名/挂载点]   卸载光盘
shutdown [选项] [时间]   -h 关机  -r 重启  
halt/init 0关机  
reboot/init 6 重启 
logout 退出登录
vim 文本编辑器   插入命令： a 在光标所在字符后插入 A 在光标所在行尾插入  o 在光标下插入新行  O 在光标上插入新行
                          定位命令： :set nu 设置行号  :set nonu 取消行号  gg到第一行  G到最后一行  :n 到第n行   $移至行尾  0  移至行首
                         删除命令： x 删除光标所在处字符  nx 删除光标所在处后n个字符  dd删除光标所在行  ndd 删除n行  dG删除光标所在行到文件末尾  D删除光标所在处到行尾  :n1,n2d 删除n1-n2行
                         复制和剪切命令：yy 复制当前行 nyy 复制当前以下n行  dd 剪切当前行  ndd 剪切当前以下n行   p 粘贴在当前光标所在行下
                         替换和取消命令：r 取代光标所在处字符  R 从光标所在处开始替换字符，按ESC结束  u 取消上一步操作
                         搜索和搜索替换命令：/string 搜索指定字符串  n 切换下一个搜索指定字符串  :%s/old/new/g 替换全文指定字符串（不需要询问） :n1,n2s/old/new/c 在n1-n2范围内替换指定字符串（需要询问）
                         保存和退出命令：:w 保存修改  :w newfilename 另存为  :wq 保存并退出  ZZ 保存并退出（命令模式下） :q！不保存退出  :wq! 强制保存退出（仅文件所有者和root可使用）
rpm  -ivh [包全名]  安装
        -Uvh [包全名] 升级  
        -e [包名] 卸载  
        -q [包名] 查询包是否安装  
        -qa 查询所有已经安装的RPM包  
        -qi [包名] 查询包信息  
        -ql [包名] 查询包中文件安装位置  
        -qf [系统文件名] 查询系统文件属于哪个RPM包  
        -qR [包名] 查询包的依赖性 
        -p [包全名] 查询未安装包信息
        -V 校验指定RPM包中的文件 
yum   list 查询所有可用软件包列表 
         search [包名] 搜索指定包 
         install [包名] 安装   -y 自动回答yes  
         update [包名] 升级   -y 自动回答yes
         remove  [包名] 卸载   -y 自动回答yes
         grouplist 查询所有可用的软件包组列表 
         groupinstall [软件包组名]  安装指定软件包组   （软件包组名有空格要用“”）
         groupremove [软件包组名]   卸载指定软件包组  （软件包组名有空格要用“”）
光盘yum源搭建步骤   1）挂载光盘   mount  /dev/sr0 /mnt/cdrom
                                2）让网络yum源文件失效  cd  /etc/yum.repos.d/   mv 改名 
                                3）修改光盘yum源文件  vim CentOS-Media.repo  baseurl=file:///mnt/cdrom     注释两个不存在的地址   enabled=1
systemctl  start httpd.service 启动Apache  
systemctl  stop httpd.service  停止Apache
systemctl  status httpd.service 检查httpd状态
mount -o remount,acl  临时开启分区ACL权限
getfacl [文件名]  查看ACL权限
setfacl  [文件名]  设定ACL权限的命令
            -m : 设定ACL权限   exp ：1.setfacl -m u:st:rx /project 设定st权限为r-x  2.setfacl -m g:tgroup2:rwx /project  设定tgroup2权限为rwx   3. setfacl -m m:rx /project 设定mask权限为r-x   
            -x  ：删除ACL权限   exp ：1.setfacl -x u:st /project   2.setfacl -x g:tgroup2 /project
            -b [文件名] :  删除文件所有的ACL权限 
            -R [文件名] :  递归设定ACL权限  exp: setfacl -m d:u:st:rx -R /project 默认递归st用户权限为r-x 
SUID : chmod 4755  [文件名]                        只能是可执行文件 普通用户对该文件有--x权限
SGID : chmod 2755  [目录名/文件名]             目录：普通用户对该目录有r-x 权限  文件：普通用户对该文件有--x权限
SBIT  : chmod 1755  [目录名]                        普通用户对该目录有-wx权限，普通用户只能删除在该目录下自己的文件，不能删除其他用户的文件 
chattr  +i  [文件名/目录名] ：对文件不允许进行删除、改名、添加和修改数据   对目录只能修改目录下文件的数据，但不允许建立和删除文件
           +a [文件名/目录名] ：对文件只允许增加数据，但不能删除和修改数据   对目录只允许在目录中建立和修改文件，但不允许删除文件
lsattr  [选项] [文件名] ：查看文件系统属性 
           -a ：显示所有文件和目录
           -d :  若目标是目录，仅列出目录本身的属性，而不是子文件的
df  显示文件系统的磁盘使用情况
     -a ：显示所有的文件系统信息，包括特殊文件系统
     -h ：使用习惯单位显示容量
     -T ：显示文件系统类型
du -sh [目录名/文件名]：统计总占用量，而不列出子目录和子文件的占用量
fdisk [磁盘名] ：给磁盘分区   m查看帮助  d删除分区 n新建分区  l显示文件系统类型  p显示分区列表  t改变一个分区的系统ID  w保存退出 q 不保存退出                      
fdisk -l  ：查看磁盘及分区信息
partprobe  ：重新读取分区表信息
mkfs -t  [文件系统类型] [磁盘分区] ：格式化分区  exp : mkfs -t ext4 /dev/sdb1
mount -o remount,rw /  ：/etc/ftab文件修复
echo -e [输出内容]：支持\控制的字符转换
                               \\输出\本身  
                               \a  输出警告音
                               \b  退格键 向左删除键
                               \e  escape键
                               \f  换页符
                               \n 换行符
                               \t  制表符
                               \Onnn 按照八进制ASCII码表输出字符， nnn是三位八进制数
                               \xhh 按照十六进制ASCII码表输出字符，hh代表两位十六进制数
                               \e[1;  颜色起始符  \e[0m 颜色终止符   （30m黑 31m红 32m绿 33m黄 34m蓝 35紫 36青 37白）
history  历史命令
            -c  : 清空历史命令
            -w : 把缓存中的历史命令写入历史命令保存文件 /.bash_history
            vim /etc/profile 修改保存历史命令条数   
visudo 给普通用户赋予root权限
sudo  [命令绝对路径]
sudo -l 查看可执行的sudo权限 
alias   查看别名 
         [别名]=‘[原命令]’
vim /root/.bashrc 别名永久生效
unalias 删除别名
输出重定向 ： 命令 &>>文件  ：以追加的方式，把正确输出和错误输出都保存到同一个文件当中  ( &> 以覆盖的方式)
                     命令>>文件1 2>>文件2 ：把正确的输出追加到文件1中，把错误的输出追加到文件2中
输入重定向 ： 命令 < 文件  ：把文件作为命令的输入
多命令顺序执行  :   命令1;命令2           (多个命令顺序执行，命令之间没有任何逻辑联系）
                            命令1&&命令2      (当命令1正确执行，则命令2才会执行  当命令1执行不正确，则命令2不会执行）
                            命令1 | | 命令2     （当命令1执行不正确，则命令2才会执行  当命令1正确执行，则命令2不会执行）
set ：查看系统中所有变量 
unset [变量] ：删除变量 
echo $[变量] ：调用变量
变量叠加：exp: aa=123
                       aa=“$aa”456 /  aa=$｛aa｝456
export  [变量名]=变量值 ：设置环境变量
env ：查询环境变量 
PS1：定义系统提示符的变量 
        \d  : 显示日期，格式为“星期 月 日”
        \h  : 显示简写主机名  
        \t  :  显示24小时制时间 ，格式为“HH:MM:SS”
        \T  : 显示12小时制时间 ，格式为“HH:MM:SS”
        \A  : 显示24小时制时间，格式为“HH:MM”
        \u  : 显示当前用户名
        \w : 显示当前所在目录的完整名称 
        \W : 显示当前所在目录的最后一个目录 
        \#  : 执行的第几个命令
        \$ ：提示符。root 显示为“#”普通用户显示为“$”       
位置参数变量： $n ：n为数字，$0代表命令本身，$1-$9代表第一个到第九个参数，十以上的参数需要用｛｝，如${10}
                       $*  ：这个变量代表命令行中所有的参数，把所有的参数看成一个整体
                       $@：这个变量代表命令行中所有的参数，把每个参数区分对待
                       $# ：这个变量代表命令行中所有参数的个数
预定义变量：    $? ：最后一次执行的命令的返回状态。如果这个变量的值为0，证明上一个命令正确执行；如果变量值不为0.则证明上一个命令执行不正确
                       $$ ：当前进程的进程号（PID）
                       $!  :  后台运行的最后一个进程的进程号（PID） 
read [选项] [变量名] ：接收键盘输入
          -p“提示信息”：在等待read输入时，输出提示信息
          -t [秒数]  ：指定等待时间
          -n [字符数]  ：read命令只接受指定的字符数，就会自动执行
          -s ：隐藏输入的数据  
declare [+/-] [选项] [变量名]：声明变量类型
             - ：给变量设定类型属性
             +：取消变量的类型属性
             -i：将变量声明为整数型
            -x：将变量声明为环境变量
            -p：显示指定变量的被声明的类型
数值运算：1.  $((运算式)) 
                2.  $[运算式]
                3.  declare -i  cc=$aa+$bb
                4,  cc=$(expr $aa + $bb)
shell 登录信息 ：本地终端欢迎信息 ：/etc/issue   
                         远程终端欢迎信息： /etc/issue.net      
                         登录后欢迎信息：/etc/motd
转义符仅在/etc/issue 才可生效   \d    显示当前系统日期
                                                \s    显示操作系统名称
                                                \l     显示登陆的终端号
                                                \m   显示硬件体系结构 
                                                \n    显示主机名
                                                \o    显示域名
                                                \r     显示内核版本
                                                \t     显示当前系统时间
                                                \u    显示当前登录用户的序列号
                        
基础正则表达式：   *    前一个字符匹配0次或任意多次
                             .    匹配除了换行符外任意一个字符
                            ^   匹配行首
                            $    匹配行尾
                            []    匹配中括号中指定的任意一个字符，只匹配一个字符
                           [^]  匹配除中括号的字符以外的任意一个字符
                            \    转义符
                         \{n\}  表示其前面的字符恰好出现n次  
                        \{n,\}  表示其前面的字符出现不小于n次
                      \{n,m\} 表示其前面的字符至少出现n次，最多出现m次
cut [选项] 文件名 ：字段列提取命令
       -f  列号 ： 提取第几列
       -d "分隔符"  ： 按照指定分隔符分割列 	
printf  '输出类型输出格式'  输出字符串。
                          %i  ：输出整数
                          %f ： 输出浮点数  
         输出格式：\n : 换行
                         \r ：回车ENTER键
                         \t :  制表符TAB键    
awk  '条件1{动作1} 条件2{动作2}' 文件名 ：字段列提取命令
         条件:BEGIN 在所有动作执行之前，执行BEGIN
                END 在所有动作执行之后，执行END
                FS内置变量 ：指定分隔符    例如：awk 'BEGIN {FS=":"} {print $1 "\t" $3}'  /etc/passwd
sed [选项] '动作'  文件名
        -n ：把经过sed命令处理的当前行输出到屏幕
        -e ：允许对输入数据进行多条sed命令编辑  例如：sed -e 's/Liming/chy/g' ; s/Gao/cgt/g' student.txt
        -i  ：用sed的修改结果直接修改读取数据的文件
       动作： a ：追加，在当前行后添加一行或多行。添加多行时，每行末尾需要用 \ 代表数据未完结
                  c :  行替换
                  i  :  插入，在当前行前插入一行或多行。添加多行时，每行末尾需要用 \ 代表数据未完结
                 d ：删除指定行
                 p ：输出指定行
                 s  :  字串替换，格式为 行范围s/旧字串/新字串/g   
sort [选项] 文件名 ：排序命令
       -f ：忽略大小写
       -r ：反向排序
wc [选项] 文件名 ：统计命令
      -l   ： 只统计行数
      -w ： 只统计单词数
      -m ：只统计字符数
判断命令格式： [ -选项 判断 ] && echo yes || echo no  /   test -选项 判断 && echo yes || echo no
	文件类型判断 ：-d 文件:  判断该文件是否为目录文件
                       -e 文件:  判断该文件是否存在
                       -f 文件：判断该文件是否为普通文件
	文件权限判断 ：-r 文件：判断该文件是否拥有读权限
                       -w 文件: 判断该文件是否拥有写权限
                       -x 文件：判断该文件是否拥有执行权限
	两个文件之间比较： 文件1 -nt 文件2  ：判断文件1的修改时间是否比文件2的新
                              文件1 -ot 文件2  ：判断文件1的修改时间是否比文件2的旧
                              文件1 -ef 文件2  ：判断文件1是否和文件2的inode号一致
	两个整数之间比较：整数1 -eq 整数2  ：判断整数1是否和整数2相等
                             整数1 -ne 整数2  ：判断整数1是否和整数2不相等
                             整数1 -gt 整数2  ：判断整数1是否大于整数2
                             整数1 -lt  整数2  ：判断整数1是否小于整数2
                             整数1 -ge 整数2 ：判断整数1是否大于等于整数2
                             整数1 -le  整数2 ：判断整数1是否小于等于整数2
	字符串判断：-z 字符串 ：判断字符串是否为空 
                   	   -n 字符串 ：判断字符串是否为非空 
                   	   字符串1 == 字符串2 ：判断字符串1是否和字符串2相等 
                   	   字符串1 ! = 字符串2 ：判断字符串1是否和字符串2不相等 
	多重条件判断 ：判断1 -a 判断2 ：判断1和判断2都成立，最终的结果才为真
                       	       判断1 -o 判断2 ：判断1和判断2有一个成立，最终的结果为真
                          	       ！判断 ： 使原始的判断取反
单分支if条件语句：if [ 条件判断式 ];then
                                    程序
                           fi
双分支if条件语句：if [ 条件判断式 ]
		then
                                   	程序
                           	else 
                                                程序
                           fi
多分支if条件语句：if [ 条件判断式1 ];then
		当条件判断式1成立时，执行程序1
	           elif [ 条件判断式2 ];then
		当条件判读式2成立时，执行程序2
	           ...省略更多条件...
	           else
		当所有条件都不成立时，最后执行此程序
	           fi
多分支case条件语句： case $变量名 in
                                    "值1")
			如果变量的值等于值1，则执行程序1
		  	;;	
		    "值2")
			如果变量的值等于值2，则执行程序2
			;;
		   ...省略其他分支...
		        * ) 
			如果变量的值都不是以上的值，则执行此程序
			;;
		 esac      
for 循环：
	语法1： for 变量 in 值1 值2 值3 ...
		do
			程序
		done
	语法2：for (( 初始值;循环控制条件;变量变化 ))
		do
			程序
		done
while 循环： while [ 条件判断式 ]
		do
			程序1
		done
until 循环： until [ 条件判断式 ]
		do 	
			程序1
		done
ntsysv 命令管理自启动
ps aux ：查看系统中所有进程
top ：查看进程健康状态
kill [信号] [PID]：终止指定进程
	-l ：查看可用的进程信号 
        信号：1 SIGHUP ：该信号让进程立即关闭，然后重新读取配置文件之后重启
                  9 SIGKILL ： 强制终止进程
                 15 SIGTERM ：正常终止进程
killall [信号] [进程名] ：杀死所有进程
pkill [选项] [信号] 进程名：杀死所有进程
         -t [终端号] ：按照终端号踢出用户
把进程放入后台 ： 1.在命令后加 & （放入后台运行）  2. 执行命令后，按下ctrl+z 快捷键 （放入后台暂停）
jobs ：查看后台的工作
         -l ： 显示后台工作的PID
bg %工作号：把后台暂停的工作恢复到后台执行
fg  %工作号：把后台的工作恢复到前台执行
vmstat [刷新延时] [刷新次数] ： 监控系统资源 
dmesg ：开机时内核检测信息
free -h ：查看内存使用状态
uptime ：显示系统的启动时间和平均负载
uname [选项] ：查看系统与内核相关信息
	-a ：查看系统所有相关信息
	-r  :  查看内核版本
	-m ：查看系统位数
lsb_release -a ：查询当前Linux系统的发行版本
lsof [选项] ： 列出进程调用或打开的文件信息
	-c 字符串 ：列出以字符串开头的进程打开文件
	-u 用户名 ：列出某个用户的进程打开文件
	-p PID ：列出某个PID进程打开的文件
crontab [选项] ：系统定时任务
	-e ：编辑定时任务  
	-l ：查询crontab任务
	-r ：删除所有的任务
	标准格式：* * * * * command
		第一个 * ：一小时当中的第几分钟 0-59
		第二个 * ：一天当中的第几小时 0-23
		第三个 * ：一个月当中的第几天 1-31
		第四个 * ：一年当中的第几月 1-12
		第五个 * ：一周当中的星期几 0-7（0，7都代表星期日）  
runlevel ：查看运行级别
init 运行级别 ：改变运行级别命令